C PROGRAMMING:

There is no need of programming if there is no data
There is no need of computer if there is no data 

Hence everything revolves around data.

Data:
Anything that is worth storing or remembering. Data must have implicit meaning.
If you cannot figure out the category or domain or entity or the area under which the data is coming from, then its cant be data.

Data can be categorised as:
1. Numeric
2. String

There are many forms of data liek, audible sound, images, video etc.

Numeric: 
1. Numbers only (distinct or descrete)
2. Numbers with precision (The decimal part of the number is only add accuracy to the number)
String:
1. alphabetic
2. alphanumeric

Data in memory is stored in the form:
ON OFF
we see on and off as 1 and 0
Now, we can make combination of 1s and 0s and make patterns

Now, different individuals and companies may use different patterns.
however, if they have to work together, then same pattern is required.

Problems occur when different individuals or companies work on same project.

Hence we need a STANDARD pattern which can be used by majority of people or companies.

Hence, the ASCII character set was introduced.
This includes mainly 5 parts:
1. eng upper case letters
2. eng lower case letters
3. The 10 digits as characters
4. important 32 symbols
5. other symbols

There are 256 ASCII characters, and every ASCII character has its own ASCII value which starts from Zero and thus ends with 255.
Hence the size of any ASCII character is one byte.

Note that in one bit, we can store any of 2 values 0 or 1
In 3 bits, 8 different values
Thus in N bits we can store 2powerN values
Thus in N+1 bits we can store (2powerN * 2) values
Thus, with addition of one bit, the range of values we can store doubles.

4 bits is called as a Nibble
In one Nibble, we can store upto 16 different values
Base-2 are called as Binary numbers
Base-8 are called as Octal numbers
Base-10 are called as decimal numbers
Base-16 are called as Hexa-Decimal Numbers

So in one Nibble we can store 1111 which is 15 which is in Hexa-Decimal is 'f' or 'F'

Thus ff is 15 * 16power1 + 15 * 16power0 = 16*15 + 15*1 = 240 + 15 = 255
567 as decimal number = 5810 power2 + 6 * 10power1 + 7*10power0 = 5*100 + 6*10 + 7*1 = 500+60+7 = 567

Pending topic:
EVOLUTION OF PROGRAMMING LANGUAGES

Special characters called as Escape Sequences:
\n new line character (line break) ASCII value is 32
\t horizontal tab
\v vertical tab
\b back space
\a audible system notification
\\ to print \
\" to print "
\r carriage return
\0 end of string character

DATA TYPES:
Since much of the data are similar or can be categorized, we have the following basic or primitive DTs in C, namely:
Char 1 byte   Accepts any of the ASCII characters
int  4 bytes  4 bytes of integer number (by default int is signed int). By default int is long int
double 8 bytes	number with precision
float 4 bytes	a small number with precision
Note: The precision is usually of 6 digits by default. However, we can store more accuracy.

MANIPULATORS OF DATA TYPES:
	1. Size manipulator: short and long
short can be applied only to int and short int is 2 bytes
long can also be applied only to int and long long int is 8 bytes
	2. Sign Manipulators: By default all number of all DTs have sign. Thus the MSB or LSM (depending on how numbers are stored using either litttle endian or big endian) is used as sign bit.
	If teh MSB is 1 (set) then the number is -ve
	if the MSB is Zero (not set) then the number is +ve
	
I/O Functions:
library: stdio.h
.h file is header file
All header files will have only function declarations (prototypes)
Their respective .c files will have the definitions (implementations)
Prototype of a function will have 3 things. Return type, function name and the argument list.

C is a procedural programming language (PPL)
Thus for everything and anything, we have to do/solve it in terms of functions.
PPL follows divide and conquer technique
give a big problem, we divide it into N number of sub problems which are atomic in nature and we solve each of these sub problems using one function.
synonyms of for function: methods, procedure, behaviour.

C is also a Modular language.
Thats is, related code or functions are grouped
fr eg, all string handling functions are put into string.handlingall math functions are put into math.handlingall I/P functions are put into stdio.h adn so on
likewise we too (programmers) group the related functions into files.

I/P functions:

Note : 
stdin refers to standard input device
stdout refers to std o/p device
stderr refers to stnd error device usually stdout itself

getc() : used to read one character from stdin or from file
int getc(FILE *stream); // Prototype
char ch = getc(stdin); // Example

putc() : used to write one character to the stdout or to files
int putc(char, FILE*);
putc(ch, stdout);

gets (): used to read a string (space is also part of i/p)

puts() : used to write a string
printf (): used to write a formated string
scanf (): used to read formatted string
sprintf(): used to read a string from memory format it and store it back in
sscanf(): similar to sprintf()
fprintf(): used to write formatted string to file
fscanf(): used to read formatter string from file

FORMAT SPECIFIERS:
%c 	to print any of the  ASCII chars 				1 byte
%d 	to print int number in decimal format 			4 bytes
%o  to print int number in octal format 			4 bytes
%x %X to print int number in hexa-decimal format 	4 or 8 bytes
%u  to print unsigned int number in decimal format	4 bytes
%p to print an address 								4 bytes
%s to print a string (set of characters which is one data. String must end with end of string character which is \0 character)
%f to print float data 								4 bytes
%lf	to print double data							8 bytes
%ld  to print long long int in decimal format  8 bytes

